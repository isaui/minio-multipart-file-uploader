version: '3.8'

services:
  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Golang Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - sqlite_data:/data  # Mount the persistent volume for SQLite database
    depends_on:
      minio:
        condition: service_healthy
    environment:
      - MINIO_ENDPOINT=${MINIO_ENDPOINT:-minio:9000}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - SQLITE_DB_PATH=${SQLITE_DB_PATH:-/data/database.db}

  # Vue TypeScript Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        # Build-time arguments untuk kompilasi frontend
        VITE_API_URL: ${VITE_API_URL:-http://localhost/api}
    ports:
      - "3000:3000"
    volumes:
      - /app/node_modules  # Anonymous volume for node_modules
    depends_on:
      - backend

  # Nginx Reverse Proxy
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    # Uncomment for SSL in production
    # volumes:
    #   - ./certbot/conf:/etc/letsencrypt
    #   - ./certbot/www:/var/www/certbot

volumes:
  minio_data:
  sqlite_data:
